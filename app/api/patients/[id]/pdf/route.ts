import { NextRequest, NextResponse } from 'next/server'
import { getServerSession } from 'next-auth'
import { authOptions } from '@/lib/auth'
import { PatientModel, WardChargesModel } from '@/lib/sheets-models'
import chromium from '@sparticuz/chromium'
import puppeteer from 'puppeteer-core'
import { formatDate } from '@/lib/utils'

// Use Node.js runtime for Google Sheets API compatibility
export const runtime = 'nodejs'

function generateAdmissionHTML(patient: any, wardCharges: any) {
  return `
    <html>
      <head>
        <style>
          body { font-family: Arial, sans-serif; padding: 24px; font-size: 13px; }
          h1 { color: #333; text-align: center; margin-bottom: 20px; }
          .header { text-align: center; margin-bottom: 30px; }
          .logo { width: 60px; height: 60px; margin: 0 auto 10px; }
          table { width: 100%; border-collapse: collapse; margin: 10px 0; }
          td, th { border: 1px solid #ccc; padding: 8px; text-align: left; }
          th { background-color: #f5f5f5; font-weight: bold; }
          .section { margin: 20px 0; }
          .signature-lines { margin-top: 40px; }
          .signature-box { display: inline-block; width: 45%; margin-right: 10%; }
          .page-break { page-break-before: always; }
        </style>
      </head>
      <body>
        <div class="header">
          <div class="logo">üè•</div>
          <h1>ZAWAR HOSPITAL</h1>
          <h2>REGISTRATION CUM ADMISSION</h2>
        </div>

        <div class="section">
          <h3>Patient Information</h3>
          <table>
            <tr><th>IPD No</th><td>${patient.ipdNo || 'N/A'}</td><th>Date of Admission</th><td>${formatDate(new Date(patient.dateOfAdmission))}</td></tr>
            <tr><th>Name (English)</th><td colspan="3">${patient.firstName} ${patient.middleName || ''} ${patient.surname}</td></tr>
            <tr><th>Name (Marathi)</th><td colspan="3">${patient.firstNameMarathi} ${patient.middleNameMarathi || ''} ${patient.surnameMarathi}</td></tr>
            <tr><th>Age</th><td>${patient.age}</td><th>Gender</th><td>${patient.gender}</td></tr>
            <tr><th>Address</th><td colspan="3">${patient.address}</td></tr>
            <tr><th>Phone</th><td>${patient.phoneNo}</td><th>Ward</th><td>${patient.ward.replace(/_/g, ' ')}</td></tr>
          </table>
        </div>

        <div class="section">
          <h3>Declaration</h3>
          <p><strong>English:</strong> I agree to abide by all the terms and conditions of the hospital currently in existence. I will be responsible for taking the patient from the hospital. I have been given full details of the charges for the class in which the patient is to be admitted and I am ready to pay all the amount and then the patient will be admitted. I am admitting the patient to this hospital on my responsibility. I have confidence in the doctor treating the patient and I consent to receive treatment from him.</p>
          
          <p><strong>Marathi:</strong> ‡§∞‡•Å‡§ó‡•ç‡§£‡§æ‡§≤‡§Ø‡§æ‡§§‡•Ä‡§≤ ‡§µ‡§æ‡§∏‡•ç‡§§‡§µ‡•ç‡§Ø‡§æ‡§Æ‡§ß‡•ç‡§Ø‡•á ‡§∏‡§ß‡•ç‡§Ø‡§æ ‡§Ö‡§∏‡•ç‡§§‡§ø‡§§‡•ç‡§µ‡§æ‡§§ ‡§Ö‡§∏‡§£‡§æ‡§±‡•ç‡§Ø‡§æ ‡§∞‡•Å‡§ó‡•ç‡§£‡§æ‡§≤‡§Ø‡§æ‡§Ç‡§ö‡•ç‡§Ø‡§æ ‡§∏‡§∞‡•ç‡§µ ‡§Ö‡§ü‡•Ä ‡§µ ‡§®‡§ø‡§Ø‡§Æ‡§æ‡§Ç‡§ö‡•á ‡§™‡§æ‡§≤‡§® ‡§Æ‡•Ä ‡§ï‡§∞‡•á‡§®. ‡§∞‡•Å‡§ó‡•ç‡§£‡§æ‡§≤‡§æ ‡§∞‡•Å‡§ó‡•ç‡§£‡§æ‡§≤‡§Ø‡§æ‡§§‡•Ç‡§® ‡§ò‡•á‡§ä‡§® ‡§ú‡§æ‡§£‡•ç‡§Ø‡§æ‡§ö‡•Ä ‡§ú‡§¨‡§æ‡§¨‡§¶‡§æ‡§∞‡•Ä ‡§Æ‡§æ‡§ù‡•Ä ‡§∞‡§æ‡§π‡•Ä‡§≤. ‡§∞‡•Å‡§ó‡•ç‡§£‡§æ‡§≤‡§æ ‡§ú‡•ç‡§Ø‡§æ ‡§™‡•ç‡§∞‡§µ‡§∞‡•ç‡§ó‡§æ‡§§ ‡§¶‡§æ‡§ñ‡§≤ ‡§ï‡§∞‡§æ‡§µ‡§Ø‡§æ‡§ö‡•á ‡§Ü‡§π‡•á ‡§§‡•ç‡§Ø‡§æ ‡§™‡•ç‡§∞‡§µ‡§∞‡•ç‡§ó‡§æ‡§≤‡§æ ‡§Æ‡•ã‡§¨‡§¶‡§≤‡•ç‡§Ø‡§æ‡§ö‡•Ä ‡§Æ‡§≤‡§æ ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§ï‡§≤‡•ç‡§™‡§®‡§æ ‡§¶‡§ø‡§≤‡•Ä ‡§Ö‡§∏‡•Ç‡§® ‡§∏‡§∞‡•ç‡§µ ‡§∞‡§ï‡•ç‡§ï‡§Æ ‡§Æ‡•Ä ‡§≠‡§∞‡§£‡•ç‡§Ø‡§æ‡§∏ ‡§§‡§Ø‡§æ‡§∞ ‡§Ü‡§π‡•á ‡§µ ‡§§‡•ç‡§Ø‡§æ‡§®‡§Ç‡§§‡§∞ ‡§∞‡•Å‡§ó‡•ç‡§£‡§æ‡§≤‡§æ ‡§¶‡§æ‡§ñ‡§≤ ‡§ï‡§∞‡•Ç‡§® ‡§ò‡•á‡§§‡§≤‡•á ‡§ú‡§æ‡§à‡§≤. ‡§Æ‡•Ä ‡§∞‡•Å‡§ó‡•ç‡§£‡§æ‡§∏ ‡§Æ‡§æ‡§ù‡•ç‡§Ø‡§æ ‡§ú‡§¨‡§æ‡§¨‡§¶‡§æ‡§∞‡•Ä‡§µ‡§∞ ‡§Ø‡§æ ‡§∞‡•Å‡§ó‡•ç‡§£‡§æ‡§≤‡§Ø‡§æ‡§§ ‡§¶‡§æ‡§ñ‡§≤ ‡§ï‡§∞‡•Ä‡§§ ‡§Ü‡§π‡•á. ‡§∞‡•Å‡§ó‡•ç‡§£‡§æ‡§µ‡§∞ ‡§â‡§™‡§ö‡§æ‡§∞ ‡§ï‡§∞‡§£‡§æ‡§±‡•ç‡§Ø‡§æ ‡§°‡•â‡§ï‡•ç‡§ü‡§∞‡§µ‡§∞ ‡§Æ‡§æ‡§ù‡§æ ‡§µ‡§ø‡§∂‡•ç‡§µ‡§æ‡§∏ ‡§Ü‡§π‡•á ‡§µ ‡§§‡•ç‡§Ø‡§æ‡§ö‡•á‡§ï‡§°‡•Ç‡§® ‡§â‡§™‡§ö‡§æ‡§∞ ‡§ï‡§∞‡•Ç‡§® ‡§ò‡•á‡§£‡•ç‡§Ø‡§æ‡§∏ ‡§Æ‡§æ‡§ù‡•Ä ‡§∏‡§Ç‡§Æ‡§§‡•Ä ‡§Ü‡§π‡•á.</p>
        </div>

        <div class="signature-lines">
          <div class="signature-box">
            <p>Patient/Relative Signature:</p>
            <br><br>
            <p>Name: ${patient.nameOfNearestRelative || ''}</p>
            <p>Date: ${formatDate(new Date())}</p>
          </div>
          <div class="signature-box">
            <p>Hospital Staff Signature:</p>
            <br><br>
            <p>Name: ________________</p>
            <p>Date: ${formatDate(new Date())}</p>
          </div>
        </div>

        <div class="page-break"></div>

        <div class="section">
          <h3>Payee Slip</h3>
          <table>
            <tr><th>Charges</th><th>‡§®‡§æ‡§§‡•á‡§µ‡§æ‡§à‡§ï‡§æ‡§Ç‡§ö‡•á ‡§®‡§æ‡§µ</th><th>Per Day Amount</th><th>Total</th></tr>
            <tr><td>Bed Charges</td><td>${patient.nameOfNearestRelative || ''}</td><td>‚Çπ${wardCharges?.bedCharges || 0}</td><td>‚Çπ${wardCharges?.bedCharges || 0}</td></tr>
            <tr><td>Doctor Charges</td><td></td><td>‚Çπ${wardCharges?.doctorCharges || 0}</td><td>‚Çπ${wardCharges?.doctorCharges || 0}</td></tr>
            <tr><td>Nursing Charges</td><td></td><td>‚Çπ${wardCharges?.nursingCharges || 0}</td><td>‚Çπ${wardCharges?.nursingCharges || 0}</td></tr>
            <tr><td><strong>Total Per Day</strong></td><td></td><td></td><td><strong>‚Çπ${wardCharges?.totalPerDay || 0}</strong></td></tr>
          </table>
        </div>

        <div class="section">
          <h3>‡§™‡§∞‡§ø‡§∂‡§ø‡§∑‡•ç‡§ü "‡§¨"</h3>
          <p>‡§Æ‡•Ä / ‡§Ü‡§Æ‡•ç‡§π‡•Ä ‡§∞‡•Å‡§ó‡•ç‡§£‡§æ‡§µ‡§∞ ‡§¶‡§ø. ____/____/‡•®‡•¶__ ‡§™‡§æ‡§∏‡•Ç‡§® ‡§¶‡§ø. ____/____/‡•®‡•¶__ ‡§™‡§∞‡•ç‡§Ø‡§Ç‡§§ ‡§î‡§∑‡§ß‡•ã‡§™‡§ö‡§æ‡§∞ ‡§ï‡§∞‡•Ä‡§§ ‡§Ü‡§π‡•á / ‡§Ü‡§π‡•ã‡§§. ‡§Ü‡§ú ‡§∞‡•ã‡§ú‡•Ä ‡§ò‡§∞‡•Ä ‡§ú‡§æ‡§£‡•ç‡§Ø‡§æ‡§∏ ‡§™‡§∞‡§µ‡§æ‡§®‡§ó‡•Ä ‡§¶‡•á‡§§ ‡§Ü‡§π‡•ã‡§§.</p>
          
          <p>Final Diagnosis: ___________________________</p>
          
          <div style="margin-top: 30px;">
            <div style="float: left; width: 50%;">
              <p>‡§§‡§ú‡•ç‡§ú‡•ç‡§û ‡§µ‡•à‡§¶‡•ç‡§Ø‡§ï‡•Ä‡§Ø ‡§Ö‡§ß‡§ø‡§ï‡§æ‡§∞‡•Ä</p>
              <p>‡§°‡•â. ____________________</p>
              <p>‡§∏‡•ç‡§µ‡§æ‡§ï‡•ç‡§∑‡§∞‡•Ä ____________________</p>
              <p>‡§¶‡§ø. ____/____/‡•®‡•¶__ ‡§µ‡•á‡§≥ : __________</p>
            </div>
            <div style="float: right; width: 50%;">
              <p>‡§Æ‡•Ä ‡§ñ‡§æ‡§≤‡•Ä ‡§∏‡§π‡•Ä ‡§ï‡§∞‡§£‡§æ‡§∞‡•á _____________________________</p>
              <p>‡§¶‡§ø. ____/____/‡•®‡•¶__ ‡§∞‡•ã‡§ú‡•Ä ‡§â‡§™‡§®‡§ø‡§∞‡•ç‡§¶‡§ø‡§∑‡•ç‡§ü ‡§∞‡•Å‡§ó‡•ç‡§£‡§æ‡§≤‡§Ø‡§æ‡§§ ‡§Æ‡•Ä ‡§¶‡§æ‡§ñ‡§≤ ‡§π‡•ã‡§§‡§æ‡§®‡§æ ‡§Ö‡§∏‡§≤‡•á‡§≤‡•ç‡§Ø‡§æ ‡§Æ‡§æ‡§ù‡•ç‡§Ø‡§æ ‡§∏‡§∞‡•ç‡§µ ‡§§‡§ï‡•ç‡§∞‡§æ‡§∞‡•Ä‡§Ç‡§ö‡•á ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§®‡§ï‡§æ‡§∞‡§ï ‡§®‡§ø‡§µ‡§æ‡§∞‡§£ ‡§ù‡§æ‡§≤‡•ç‡§Ø‡§æ‡§®‡§Ç‡§§‡§∞ ‡§ò‡§∞‡•Ä ‡§ú‡§æ‡§§ ‡§Ü‡§π‡•á.</p>
              <br>
              <p>‡§∞‡•Å‡§ó‡•ç‡§£‡§æ‡§ö‡•Ä ‡§∏‡§π‡•Ä ____________________ ‡§®‡§æ‡§§‡•á‡§µ‡§æ‡§à‡§ï‡§æ‡§ö‡•Ä ‡§∏‡§π‡•Ä ____________________</p>
            </div>
          </div>
        </div>
      </body>
    </html>
  `
}

export async function GET(
  request: NextRequest, 
  { params }: { params: Promise<{ id: string }> }
) {
  try {
    const session = await getServerSession(authOptions)
    if (!session) {
      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 })
    }

    const { id } = await params
    const patient = await PatientModel.findById(id)

    if (!patient) {
      return NextResponse.json({ error: 'Patient not found' }, { status: 404 })
    }

    // Fetch ward charges from Google Sheets
    const wardCharges = await WardChargesModel.findByWardType(patient.ward)

    // Launch puppeteer with sparticuz chromium (ChatGPT recommended approach)
    const browser = await puppeteer.launch({
      args: chromium.args,
      defaultViewport: chromium.defaultViewport,
      executablePath: await chromium.executablePath(
        "https://github.com/Sparticuz/chromium/releases/download/v131.0.0/chromium-v131.0.0-pack.tar"
      ),
      headless: true,
    })

    const page = await browser.newPage()

    // Generate the HTML content (using our existing logic but simplified)
    const html = generateAdmissionHTML(patient, wardCharges)

    await page.setContent(html, { waitUntil: 'networkidle0' })

    const pdfBuffer = await page.pdf({ format: 'A4' })

    await browser.close()

    const fileName = `admission-form-${patient.ipdNo || id}.pdf`

    return new NextResponse(pdfBuffer as BufferSource, {
      status: 200,
      headers: {
        'Content-Type': 'application/pdf',
        'Content-Disposition': `attachment; filename="${fileName}"`,
      },
    })
  } catch (error: any) {
    console.error('Error generating PDF:', error)
    return NextResponse.json({ error: error.message }, { status: 500 })
  }
}
